// <auto-generated />
using System;
using CitasMedicas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CitasMedicas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CitasMedicas.AppDbContext+Cita", b =>
                {
                    b.Property<int>("id_cita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_cita"));

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_doctor")
                        .HasColumnType("int");

                    b.Property<int>("id_paciente")
                        .HasColumnType("int");

                    b.HasKey("id_cita");

                    b.HasIndex("id_doctor");

                    b.HasIndex("id_paciente");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("CitasMedicas.AppDbContext+Doctor", b =>
                {
                    b.Property<int>("id_doctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_doctor"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_doctor");

                    b.ToTable("Doctores");
                });

            modelBuilder.Entity("CitasMedicas.AppDbContext+Paciente", b =>
                {
                    b.Property<int>("id_paciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_paciente"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_paciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("CitasMedicas.AppDbContext+Procedimiento", b =>
                {
                    b.Property<int>("id_procedimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_procedimiento"));

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_cita")
                        .HasColumnType("int");

                    b.HasKey("id_procedimiento");

                    b.HasIndex("id_cita");

                    b.ToTable("Procedimientos");
                });

            modelBuilder.Entity("CitasMedicas.AppDbContext+Cita", b =>
                {
                    b.HasOne("CitasMedicas.AppDbContext+Doctor", "Doctor")
                        .WithMany("Citas")
                        .HasForeignKey("id_doctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CitasMedicas.AppDbContext+Paciente", "Paciente")
                        .WithMany("Citas")
                        .HasForeignKey("id_paciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CitasMedicas.AppDbContext+Procedimiento", b =>
                {
                    b.HasOne("CitasMedicas.AppDbContext+Cita", "Cita")
                        .WithMany("Procedimientos")
                        .HasForeignKey("id_cita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("CitasMedicas.AppDbContext+Cita", b =>
                {
                    b.Navigation("Procedimientos");
                });

            modelBuilder.Entity("CitasMedicas.AppDbContext+Doctor", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("CitasMedicas.AppDbContext+Paciente", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
